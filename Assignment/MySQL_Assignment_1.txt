1) create database SchoolDB

2) Create table students (student_id int not null primary key auto_increment, name varchar(255), age int, grade varchar(255));

3) insert into students (name, age, grade) values ('Alice',20,'A+'), ('Bob',17,'A'), ('Alex',12,'B+'), ('Dexter',10,'B'), ('Kate',8,'A');

4) select * from students where age>=15;

5) update students set grade='A' where student_id=3;

6) delete from students where student_id=5;

7) create table courses (course_id int not null primary key auto_increment, course_name varchar(255), instructor varchar(255));

8) insert into courses (course_name, instructor) values ('Mathematics','Prof. Arun'), ('Physics','Prof. Pranav'),('Chemistry','Prof. Narayan'), ('Computer Science','Prof. Chiranjeev');

9) create table enrollments (student_id int, course_id int, foreign key (student_id) references students (student_id), foreign key (course_id) references courses (course_id));

10) with a as(select course_id from courses where course_name='Mathematics'), b as (select e.* from enrollments e join a where e.course_id=a.course_id) select s.* from students s join b where s.student_id=b.student_id;

11) select count(e.student_id) as count, e.course_id as course_id from enrollments e group by e.course_id;

12) with a as (select student_id, name, course_id, course_name from students join courses) select a.name as student_name, a.course_name as course_name from a join enrollments e where a.student_id=e.student_id and a.course_id=e.course_id;

13) select s.* from students s left join enrollments e on s.student_id=e.student_id where e.course_id is null;

14) alter table students add email varchar(255);

15) select avg(age),grade from students where grade is not null group by grade;

16) select name from student order by name desc;

17) create view student_course_view as
with a as (select student_id, name, course_id, course_name, instructor from students join courses) select a.name as student_name, a.course_name as course_name, a.instructor as instructor from a join enrollments e where a.student_id=e.student_id and a.course_id=e.course_id;

18) select c.* from courses c left join enrollments e on c.course_id=e.course_id where e.student_id is null;

19) create index idx on students (name);

20) select * from students order by age limit 3;

21) delimiter $$
    create procedure add_student (in s_name varchar(255), in s_age int, in s_grade varchar(255))
	begin
		insert into students (name, age, grade) values (s_name, s_age, s_grade);
	end $$

22) alter table students add column last_updated timestamp default current_timestamp on update current_timestamp;

23) create table departments (department_id int not null primary key, department_name varchar(255));

24) alter table courses add foreign key (department_id) references departments (department_id);

25) with a as (select * from departments where department_name='Science') select c.*,a.department_name as department from courses c join a on a.department_id=c.department_id;

26) select count(course_id) as no_of courses,department_id from courses group by department_id;

27) Already achieved with the tables I created.

28) with a as (select student_id, count(course_id) as count from enrollments group by student_id) select s.* from students s join a on s.student_id=a.student_id where a.count>2;

29) with a as (select course_id from enrollments group by course_id having count(student_id)>5) select c.* from courses c join a on c.course_id=a.course_id;

30) delete s from students s left join enrollments e on s.student_id = e.student_id where e.course_id is null;
