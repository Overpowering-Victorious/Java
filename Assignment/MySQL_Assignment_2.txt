// Basic Queries

	- create database company_db

	- create table employees (emp_id int not null primary key auto_increment, first_name varchar(255), last_name varchar(255), dob date, salary int);

	- insert into employees (first_name, last_name, dob, salary)
	values ('John', 'Doe', '1990-05-14', 50000), ('Jane', 'Smith', '1988-11-22', 60000), ('Robert', 'Johnson', '1992-03-18', 55000), ('Emily', 'Davis', '1995-07-09', 48000), ('Michael', 'Brown', '1985-12-30', 75000), ('Sarah', 'Wilson', '1993-09-25', 52000), ('David', 'Taylor', '1991-01-15', 58000), ('Laura', 'Anderson', '1994-04-20', 50000), ('Daniel', 'Thomas', '1989-10-05', 67000), ('Sophia', 'Martin', '1996-06-17', 49000);

	- select * from employees;

	- select * from employees where salary>50000;

	- update employees set salary=60000 where emp_id=5;

	- delete from employees where emp_id=10;

	- alter table employees add column department varchar(255);

	- alter table employees rename column department to dept_name;

	- select * from employees order by last_name;


// Intermediate Queries

	- select dept_name from employees group by dept_name;

	- select avg(salary) as avg_salary from employees;

	- select dept_name,count(emp_id) as count from employees group by dept_name;

	- select * from employees where last_name like 'S%';

	- select * from employees where year(dob)>1980 and year(dob)<1990;

	- select * from employees where salary>40000 and salary<60000;

	- select * from employees order by salary desc limit 5;

	- select * from employees where first_name like '%an%';

	- select * from employees where salary is not null;

	- select concat(first_name,' ',last_name) as full_name from employees;


// Joins & Relationships

	- create table departments (dept_id int not null primary key auto_increment, dept_name varchar(255));

	- alter table employees add foreign key (dept_id) references departments (dept_id);

	- insert into departments (dept_name) values ('IT'), ('HR'), ('Finance'), ('Marketing'), ('Operations');

	- select e.*,d.dept_name from employees e join departments d on e.dept_id=d.dept_id;

	- select d.* from departments d left join employees e on d.dept_id=e.dept_id where e.dept_id is null;

	- with a as (select * from departments where dept_name='Finance') select e.*,a.dept_name from employees e join a on e.dept_id=a.dept_id;

	- select e1.emp_id as emp_id, concat(e1.first_name,' ',e1.last_name) as employee_name, e2.emp_id as manager_id, concat(e2.first_name,' ',e2.last_name) as manager_name from employees e1 join employees e2 on e1.manager_id=e2.emp_id;

	- create table projects (project_id int not null primary key auto_increment, project_name varchar(255), dept_id int, foreign key (dept_id) references departments (dept_id));

	- create table employee_projects (emp_id int not null, project_id int not null, primary key (emp_id, project_id), foreign key (emp_id) references employees (emp_id), foreign key (project_id) references projects (project_id));

	- with a as (select ep.*,p.project_name from projects p join employee_projects ep on p.project_id=ep.project_id) select a.project_name as project_name,concat(e.first_name,' ',e.last_name) as employee_name from a join employees e on a.emp_id=e.emp_id;




// Aggregation & Grouping

	- select dept_id,sum(salary) as total_salary_par_dept from employees group by dept_id;

	- with a as (select dept_id,avg(salary) as avg_salary from employees group by dept_id) select d.dept_name from departments d join a on d.dept_id=a.dept_id where a.avg_salary=(select max(avg_salary) from a);

	- select
		case
			when timestampdiff(year,dob,curdate()) <30 then '<30'
			when timestampdiff(year,dob,curdate()) between 30 and 40 then '30-40'
			else '>40'
		end as age_group,
	count(*) as emp_count from employees group by age_group;

	- with a as (select dept_id, count(emp_id) as count from employees group by dept_id) select d.dept_name from departments d join a on d.dept_id=a.dept_id where a.count>3;

	- with a as (select min(salary) as mn,dept_id from employees group by dept_id), b as (select max(salary) as mx,dept_id from employees group by dept_id) select a.dept_id, a.mn as min_salary, b.mx as max_salary from a join b on a.dept_id=b.dept_id;

	- with a as (select dept_id, count(emp_id) as count from employees group by dept_id) select d.*,a.count as count from departments d join a on d.dept_id=a.dept_id order by a.count desc;

	- select salary from employees order by salary desc limit 1,1;

	- with a as (select dept_id, avg(salary) as avg from employees group by dept_id) select d.*,a.avg as avg_salary from departments d join a on d.dept_id=a.dept_id where a.avg<50000;

	- with a as (select dept_id, avg(salary) as avg from employees group by dept_id having avg<50000) select d.*,a.avg as avg_salary from departments d join a on d.dept_id=a.dept_id;

	- select count(emp_id) from employees where dept_id is null group by dept_id;